{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.13", "generated_at": "2025-09-30T02:59:49.405425Z", "invocation_id": "5589d937-af90-4b0f-82ee-2c8fbaab5bb7", "invocation_started_at": "2025-09-30T02:59:48.006696Z", "env": {}}, "results": [{"status": "error", "timing": [{"name": "compile", "started_at": "2025-09-30T02:59:49.339799Z", "completed_at": "2025-09-30T02:59:49.345335Z"}, {"name": "execute", "started_at": "2025-09-30T02:59:49.345621Z", "completed_at": "2025-09-30T02:59:49.375804Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.044851064682006836, "adapter_response": {}, "message": "Runtime Error in model green_taxi (models/staging/green_taxi.sql)\n  Catalog Error: Table with name green_taxi_trips_clean does not exist!\n  Did you mean \"emissions10yrs.green_taxi_trips_clean\"?\n  \n  LINE 16:     FROM \"emissions10yrs\".\"nyc_taxi\".\"green_taxi_trips_clean\"\n                    ^", "failures": null, "unique_id": "model.taxi_co2.green_taxi", "compiled": true, "compiled_code": "\n\nWITH trips AS (\n    -- Source: cleaned green taxi trips\n    SELECT *\n    FROM \"emissions10yrs\".\"nyc_taxi\".\"green_taxi_trips_clean\"\n),\n\nemissions AS (\n    -- Source: vehicle emissions lookup table\n    SELECT *\n    FROM \"emissions10yrs\".\"nyc_taxi\".\"vehicle_emissions\"\n    WHERE vehicle_type = 'green'  -- Use the correct vehicle_type\n)\n\nSELECT\n    t.*, -- Include all original columns from the cleaned table\n\n    -- Calculate CO2 emissions in kilograms\n    (t.trip_distance * e.co2_grams_per_mile) / 1000.0 AS trip_co2_kgs,\n\n    -- Calculate average MPH, safely handling zero-duration trips\n    t.trip_distance / NULLIF((EPOCH(t.lpep_dropoff_datetime) - EPOCH(t.lpep_pickup_datetime)) / 3600.0, 0) AS avg_mph,\n\n    -- Extract time-based features using the correct 'lpep_' columns\n    hour(t.lpep_pickup_datetime) AS hour_of_day,\n    dayofweek(t.lpep_pickup_datetime) AS day_of_week,\n    weekofyear(t.lpep_pickup_datetime) AS week_of_year,\n    month(t.lpep_pickup_datetime) AS month_of_year,\n    year(t.lpep_pickup_datetime) AS year\nFROM \n    trips t\nCROSS JOIN \n    emissions e", "relation_name": "\"emissions10yrs\".\"main\".\"green_taxi\"", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-09-30T02:59:49.388352Z", "completed_at": "2025-09-30T02:59:49.390953Z"}, {"name": "execute", "started_at": "2025-09-30T02:59:49.391198Z", "completed_at": "2025-09-30T02:59:49.396478Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013033866882324219, "adapter_response": {}, "message": "Runtime Error in model yellow_taxi (models/staging/yellow_taxi.sql)\n  Catalog Error: Table with name yellow_taxi_trips_clean does not exist!\n  Did you mean \"emissions10yrs.yellow_taxi_trips_clean\"?\n  \n  LINE 16:     FROM \"emissions10yrs\".\"nyc_taxi\".\"yellow_taxi_trips_clean\"\n                    ^", "failures": null, "unique_id": "model.taxi_co2.yellow_taxi", "compiled": true, "compiled_code": "\n\nWITH trips AS (\n    -- Source: cleaned yellow taxi trips\n    SELECT *\n    FROM \"emissions10yrs\".\"nyc_taxi\".\"yellow_taxi_trips_clean\"\n),\n\nemissions AS (\n    -- Source: vehicle emissions lookup table\n    SELECT *\n    FROM \"emissions10yrs\".\"nyc_taxi\".\"vehicle_emissions\"\n    WHERE vehicle_type = 'yellow'  -- Use the correct vehicle_type\n)\n\nSELECT\n    t.*, -- Include all original columns from the cleaned table\n\n    -- Calculate CO2 emissions in kilograms\n    (t.trip_distance * e.co2_grams_per_mile) / 1000.0 AS trip_co2_kgs,\n\n    -- Calculate average MPH, safely handling zero-duration trips\n    t.trip_distance / NULLIF((EPOCH(t.tpep_dropoff_datetime) - EPOCH(t.tpep_pickup_datetime)) / 3600.0, 0) AS avg_mph,\n\n    -- Extract time-based features using simpler DuckDB functions\n    hour(t.tpep_pickup_datetime) AS hour_of_day,\n    dayofweek(t.tpep_pickup_datetime) AS day_of_week,\n    weekofyear(t.tpep_pickup_datetime) AS week_of_year,\n    month(t.tpep_pickup_datetime) AS month_of_year,\n    year(t.tpep_pickup_datetime) AS year\nFROM \n    trips t\nCROSS JOIN \n    emissions e", "relation_name": "\"emissions10yrs\".\"main\".\"yellow_taxi\"", "batch_results": null}], "elapsed_time": 0.1609351634979248, "args": {"upload_to_artifacts_ingest_api": false, "require_all_warnings_handled_by_warn_error": false, "use_fast_test_edges": false, "vars": {}, "indirect_selection": "eager", "require_resource_names_without_spaces": true, "use_colors_file": true, "validate_macro_args": false, "skip_nodes_if_on_run_start_fails": false, "introspect": true, "version_check": true, "log_format": "default", "log_level": "info", "log_path": "/Users/dylanli/ds3022-data-project-1/dbt/logs", "state_modified_compare_more_unrendered_values": false, "log_file_max_bytes": 10485760, "project_dir": "/Users/dylanli/ds3022-data-project-1/dbt", "show_all_deprecations": false, "which": "run", "log_format_file": "debug", "state_modified_compare_vars": false, "quiet": false, "log_level_file": "debug", "require_nested_cumulative_type_params": false, "invocation_command": "dbt run", "partial_parse_file_diff": true, "profiles_dir": "/Users/dylanli/ds3022-data-project-1/dbt", "require_generic_test_arguments_property": true, "strict_mode": false, "select": [], "warn_error_options": {"error": [], "warn": [], "silence": []}, "send_anonymous_usage_stats": true, "favor_state": false, "partial_parse": true, "require_explicit_package_overrides_for_builtin_materializations": true, "source_freshness_run_project_hooks": true, "cache_selected_only": false, "show_resource_report": false, "use_colors": true, "empty": false, "populate_cache": true, "require_yaml_configuration_for_mf_time_spines": false, "exclude": [], "require_batched_execution_for_custom_microbatch_strategy": false, "defer": false, "macro_debugging": false, "printer_width": 80, "static_parser": true, "print": true, "write_json": true}}